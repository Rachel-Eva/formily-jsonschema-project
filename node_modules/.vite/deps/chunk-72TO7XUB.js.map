{
  "version": 3,
  "sources": ["../../hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js", "../../hoist-non-react-statics/node_modules/react-is/index.js", "../../hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js", "../../@formily/json-schema/src/shared.ts", "../../@formily/json-schema/src/compiler.ts", "../../@formily/json-schema/src/transformer.ts", "../../@formily/json-schema/src/patches.ts", "../../@formily/json-schema/src/polyfills/SPECIFICATION_1_0.ts", "../../@formily/json-schema/src/schema.ts", "../../@formily/react/src/components/FormProvider.tsx", "../../@formily/reactive-react/src/observer.ts", "../../@formily/reactive-react/src/hooks/useForceUpdate.ts", "../../@formily/reactive-react/src/hooks/useLayoutEffect.ts", "../../@formily/reactive-react/src/hooks/useDidUpdate.ts", "../../@formily/reactive-react/src/shared/global.ts", "../../@formily/reactive-react/src/shared/gc.ts", "../../@formily/reactive-react/src/shared/immediate.ts", "../../@formily/reactive-react/src/hooks/useCompatFactory.ts", "../../@formily/reactive-react/src/hooks/useCompatEffect.ts", "../../@formily/reactive-react/src/hooks/useObserver.ts", "../../@formily/reactive-react/src/hooks/index.ts", "../../@formily/react/src/hooks/useAttach.ts", "../../@formily/react/src/shared/context.ts", "../../@formily/react/src/shared/connect.ts", "../../@formily/react/src/hooks/useForm.ts", "../../@formily/react/src/hooks/useField.ts", "../../@formily/react/src/hooks/useParentForm.ts", "../../@formily/react/src/hooks/useFieldSchema.ts", "../../@formily/react/src/hooks/useFormEffects.ts", "../../@formily/react/src/hooks/useExpressionScope.ts", "../../@formily/react/src/components/FormConsumer.tsx", "../../@formily/react/src/components/ArrayField.tsx", "../../@formily/react/src/components/ReactiveField.tsx", "../../@formily/react/src/components/ObjectField.tsx", "../../@formily/react/src/components/VoidField.tsx", "../../@formily/react/src/components/RecursionField.tsx", "../../@formily/react/src/components/Field.tsx", "../../@formily/react/src/components/ExpressionScope.tsx", "../../@formily/react/src/components/RecordsScope.tsx", "../../@formily/react/src/components/RecordScope.tsx", "../../@formily/react/src/components/SchemaField.tsx", "../../@formily/react/src/shared/render.ts"],
  "sourcesContent": ["/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n", "import { isFn, each, isPlainObj, isArr, toArr, FormPath } from '@formily/shared'\nimport { isObservable, untracked } from '@formily/reactive'\nimport { Schema } from './schema'\nimport { ISchema } from './types'\n\nconst REVA_ACTIONS_KEY = Symbol.for('__REVA_ACTIONS')\n\nexport const SchemaNestedMap = {\n  parent: true,\n  root: true,\n  properties: true,\n  patternProperties: true,\n  additionalProperties: true,\n  items: true,\n  additionalItems: true,\n  'x-linkages': true,\n  'x-reactions': true,\n}\n\nexport const SchemaStateMap = {\n  title: 'title',\n  description: 'description',\n  default: 'initialValue',\n  enum: 'dataSource',\n  readOnly: 'readOnly',\n  writeOnly: 'editable',\n  'x-content': 'content',\n  'x-data': 'data',\n  'x-value': 'value',\n  'x-editable': 'editable',\n  'x-disabled': 'disabled',\n  'x-read-pretty': 'readPretty',\n  'x-read-only': 'readOnly',\n  'x-visible': 'visible',\n  'x-hidden': 'hidden',\n  'x-display': 'display',\n  'x-pattern': 'pattern',\n  'x-validator': 'validator',\n  'x-decorator': 'decoratorType',\n  'x-component': 'componentType',\n  'x-decorator-props': 'decoratorProps',\n  'x-component-props': 'componentProps',\n}\n\nexport const SchemaValidatorMap = {\n  required: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  maxLength: true,\n  minLength: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  pattern: true,\n  const: true,\n  multipleOf: true,\n  maxProperties: true,\n  minProperties: true,\n  uniqueItems: true,\n}\n\nexport const SchemaNormalKeys = Object.keys(SchemaStateMap)\n\nexport const SchemaValidatorKeys = Object.keys(SchemaValidatorMap)\n\nexport const hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport const traverse = (\n  target: any,\n  visitor: (value: any, path: Array<string | number>) => void\n) => {\n  const seenObjects = []\n  const root = target\n  const traverse = (target: any, path = []) => {\n    if (isPlainObj(target)) {\n      const seenIndex = seenObjects.indexOf(target)\n      if (seenIndex > -1) {\n        return\n      }\n      const addIndex = seenObjects.length\n      seenObjects.push(target)\n      if (isNoNeedCompileObject(target) && root !== target) {\n        visitor(target, path)\n        return\n      }\n      each(target, (value, key) => {\n        traverse(value, path.concat(key))\n      })\n      seenObjects.splice(addIndex, 1)\n    } else {\n      visitor(target, path)\n    }\n  }\n  traverse(target)\n}\n\nexport const traverseSchema = (\n  schema: ISchema,\n  visitor: (value: any, path: any[], omitCompile?: boolean) => void\n) => {\n  if (schema['x-validator'] !== undefined) {\n    visitor(\n      schema['x-validator'],\n      ['x-validator'],\n      schema['x-compile-omitted']?.includes('x-validator')\n    )\n  }\n  const seenObjects = []\n  const root = schema\n  const traverse = (target: any, path = []) => {\n    if (\n      path[0] === 'x-compile-omitted' ||\n      path[0] === 'x-validator' ||\n      path[0] === 'version' ||\n      path[0] === '_isJSONSchemaObject'\n    )\n      return\n    if (String(path[0]).indexOf('x-') == -1 && isFn(target)) return\n    if (SchemaNestedMap[path[0]]) return\n    if (schema['x-compile-omitted']?.indexOf(path[0]) > -1) {\n      visitor(target, path, true)\n      return\n    }\n    if (isPlainObj(target)) {\n      if (path[0] === 'default' || path[0] === 'x-value') {\n        visitor(target, path)\n        return\n      }\n      const seenIndex = seenObjects.indexOf(target)\n      if (seenIndex > -1) {\n        return\n      }\n      const addIndex = seenObjects.length\n      seenObjects.push(target)\n      if (isNoNeedCompileObject(target) && root !== target) {\n        visitor(target, path)\n        return\n      }\n      each(target, (value, key) => {\n        traverse(value, path.concat(key))\n      })\n      seenObjects.splice(addIndex, 1)\n    } else {\n      visitor(target, path)\n    }\n  }\n  traverse(schema)\n}\n\nexport const isNoNeedCompileObject = (source: any) => {\n  if ('$$typeof' in source && '_owner' in source) {\n    return true\n  }\n  if (source['_isAMomentObject']) {\n    return true\n  }\n  if (Schema.isSchemaInstance(source)) {\n    return true\n  }\n  if (source[REVA_ACTIONS_KEY]) {\n    return true\n  }\n  if (isFn(source['toJS'])) {\n    return true\n  }\n  if (isFn(source['toJSON'])) {\n    return true\n  }\n  if (isObservable(source)) {\n    return true\n  }\n  return false\n}\n\nexport const createDataSource = (source: any[]) => {\n  return toArr(source).map((item) => {\n    if (typeof item === 'object') {\n      return item\n    } else {\n      return {\n        label: item,\n        value: item,\n      }\n    }\n  })\n}\n\nexport const patchStateFormSchema = (\n  targetState: any,\n  pattern: any[],\n  compiled: any\n) => {\n  untracked(() => {\n    const path = FormPath.parse(pattern)\n    const segments = path.segments\n    const key = segments[0]\n    const isEnum = key === 'enum' && isArr(compiled)\n    const schemaMapKey = SchemaStateMap[key]\n    if (schemaMapKey) {\n      FormPath.setIn(\n        targetState,\n        [schemaMapKey].concat(segments.slice(1)),\n        isEnum ? createDataSource(compiled) : compiled\n      )\n    } else {\n      const isValidatorKey = SchemaValidatorMap[key]\n      if (isValidatorKey) {\n        targetState['setValidatorRule']?.(key, compiled)\n      }\n    }\n  })\n}\n", "import {\n  isArr,\n  isFn,\n  isPlainObj,\n  isStr,\n  reduce,\n  FormPath,\n} from '@formily/shared'\nimport { IGeneralFieldState } from '@formily/core'\nimport { untracked, hasCollected } from '@formily/reactive'\nimport {\n  traverse,\n  traverseSchema,\n  isNoNeedCompileObject,\n  hasOwnProperty,\n  patchStateFormSchema,\n} from './shared'\nimport { ISchema } from './types'\n\nconst ExpRE = /^\\s*\\{\\{([\\s\\S]*)\\}\\}\\s*$/\nconst Registry = {\n  silent: false,\n  compile(expression: string, scope = {}) {\n    if (Registry.silent) {\n      try {\n        return new Function('$root', `with($root) { return (${expression}); }`)(\n          scope\n        )\n      } catch {}\n    } else {\n      return new Function('$root', `with($root) { return (${expression}); }`)(\n        scope\n      )\n    }\n  },\n}\n\nexport const silent = (value = true) => {\n  Registry.silent = !!value\n}\n\nexport const registerCompiler = (\n  compiler: (expression: string, scope: any) => any\n) => {\n  if (isFn(compiler)) {\n    Registry.compile = compiler\n  }\n}\n\nexport const shallowCompile = <Source = any, Scope = any>(\n  source: Source,\n  scope?: Scope\n) => {\n  if (isStr(source)) {\n    const matched = source.match(ExpRE)\n    if (!matched) return source\n    return Registry.compile(matched[1], scope)\n  }\n  return source\n}\n\nexport const compile = <Source = any, Scope = any>(\n  source: Source,\n  scope?: Scope\n): any => {\n  const seenObjects = []\n  const compile = (source: any) => {\n    if (isStr(source)) {\n      return shallowCompile(source, scope)\n    } else if (isArr(source)) {\n      return source.map((value: any) => compile(value))\n    } else if (isPlainObj(source)) {\n      if (isNoNeedCompileObject(source)) return source\n      const seenIndex = seenObjects.indexOf(source)\n      if (seenIndex > -1) {\n        return source\n      }\n      const addIndex = seenObjects.length\n      seenObjects.push(source)\n      const results = reduce(\n        source,\n        (buf, value, key) => {\n          buf[key] = compile(value)\n          return buf\n        },\n        {}\n      )\n      seenObjects.splice(addIndex, 1)\n      return results\n    }\n    return source\n  }\n  return compile(source)\n}\n\nexport const patchCompile = (\n  targetState: IGeneralFieldState,\n  sourceState: any,\n  scope: any\n) => {\n  traverse(sourceState, (value, pattern) => {\n    const compiled = compile(value, scope)\n    if (compiled === undefined) return\n    const path = FormPath.parse(pattern)\n    const key = path.segments[0]\n    if (hasOwnProperty.call(targetState, key)) {\n      untracked(() => FormPath.setIn(targetState, path, compiled))\n    }\n  })\n}\n\nexport const patchSchemaCompile = (\n  targetState: IGeneralFieldState,\n  sourceSchema: ISchema,\n  scope: any,\n  demand = false\n) => {\n  traverseSchema(sourceSchema, (value, path, omitCompile) => {\n    let compiled = value\n    let collected = hasCollected(() => {\n      if (!omitCompile) {\n        compiled = compile(value, scope)\n      }\n    })\n    if (compiled === undefined) return\n    if (demand) {\n      if (collected || !targetState.initialized) {\n        patchStateFormSchema(targetState, path, compiled)\n      }\n    } else {\n      patchStateFormSchema(targetState, path, compiled)\n    }\n  })\n}\n", "import { untracked, autorun, observable } from '@formily/reactive'\nimport {\n  isArr,\n  isStr,\n  toArr,\n  each,\n  isFn,\n  isPlainObj,\n  reduce,\n  lazyMerge,\n} from '@formily/shared'\nimport { Schema } from './schema'\nimport {\n  ISchema,\n  ISchemaTransformerOptions,\n  IFieldStateSetterOptions,\n  SchemaReaction,\n} from './types'\nimport {\n  onFieldInit,\n  onFieldMount,\n  onFieldUnmount,\n  onFieldValueChange,\n  onFieldInputValueChange,\n  onFieldInitialValueChange,\n  onFieldValidateStart,\n  onFieldValidateEnd,\n  onFieldValidateFailed,\n  onFieldValidateSuccess,\n  IFieldFactoryProps,\n  Field,\n} from '@formily/core'\nimport { patchCompile, patchSchemaCompile, shallowCompile } from './compiler'\n\nconst FieldEffects = {\n  onFieldInit,\n  onFieldMount,\n  onFieldUnmount,\n  onFieldValueChange,\n  onFieldInputValueChange,\n  onFieldInitialValueChange,\n  onFieldValidateStart,\n  onFieldValidateEnd,\n  onFieldValidateFailed,\n  onFieldValidateSuccess,\n}\n\nconst DefaultFieldEffects = ['onFieldInit', 'onFieldValueChange']\n\nconst getDependencyValue = (\n  field: Field,\n  pattern: string,\n  property?: string\n) => {\n  const [target, path] = String(pattern).split(/\\s*#\\s*/)\n  return field.query(target).getIn(path || property || 'value')\n}\n\nconst getDependencies = (\n  field: Field,\n  dependencies:\n    | Array<string | { name?: string; source?: string; property?: string }>\n    | object\n) => {\n  if (isArr(dependencies)) {\n    const results = []\n    dependencies.forEach((pattern) => {\n      if (isStr(pattern)) {\n        results.push(getDependencyValue(field, pattern))\n      } else if (isPlainObj(pattern)) {\n        if (pattern.name && pattern.source) {\n          results[pattern.name] = getDependencyValue(\n            field,\n            pattern.source,\n            pattern.property\n          )\n        }\n      }\n    })\n    return results\n  } else if (isPlainObj(dependencies)) {\n    return reduce(\n      dependencies,\n      (buf, pattern, key) => {\n        buf[key] = getDependencyValue(field, pattern)\n        return buf\n      },\n      {}\n    )\n  }\n  return []\n}\n\nconst setSchemaFieldState = (\n  options: IFieldStateSetterOptions,\n  demand = false\n) => {\n  const { request, target, runner, field, scope } = options || {}\n  if (!request) return\n  if (target) {\n    if (request.state) {\n      field.form.setFieldState(target, (state) =>\n        patchCompile(\n          state,\n          request.state,\n          lazyMerge(scope, {\n            $target: state,\n          })\n        )\n      )\n    }\n    if (request.schema) {\n      field.form.setFieldState(target, (state) =>\n        patchSchemaCompile(\n          state,\n          request.schema,\n          lazyMerge(scope, {\n            $target: state,\n          }),\n          demand\n        )\n      )\n    }\n    if (isStr(runner) && runner) {\n      field.form.setFieldState(target, (state) => {\n        shallowCompile(\n          `{{function(){${runner}}}}`,\n          lazyMerge(scope, {\n            $target: state,\n          })\n        )()\n      })\n    }\n  } else {\n    if (request.state) {\n      field.setState((state) => patchCompile(state, request.state, scope))\n    }\n    if (request.schema) {\n      field.setState((state) =>\n        patchSchemaCompile(state, request.schema, scope, demand)\n      )\n    }\n    if (isStr(runner) && runner) {\n      shallowCompile(`{{function(){${runner}}}}`, scope)()\n    }\n  }\n}\n\nconst getBaseScope = (\n  field: Field,\n  options: ISchemaTransformerOptions = {}\n) => {\n  const $observable = (target: any, deps?: any[]) =>\n    autorun.memo(() => observable(target), deps)\n  const $props = (props: any) => field.setComponentProps(props)\n  const $effect = autorun.effect\n  const $memo = autorun.memo\n  const $self = field\n  const $form = field.form\n  const $values = field.form.values\n  return lazyMerge(\n    {\n      get $lookup() {\n        return options?.scope?.$record ?? $values\n      },\n      get $records() {\n        return field.records\n      },\n      get $record() {\n        const record = field.record\n        if (typeof record === 'object') {\n          return lazyMerge(record, {\n            get $lookup() {\n              return options?.scope?.$record ?? $values\n            },\n            get $index() {\n              return field.index\n            },\n          })\n        }\n        return record\n      },\n      get $index() {\n        return field.index\n      },\n    },\n    options.scope,\n    {\n      $form,\n      $self,\n      $observable,\n      $effect,\n      $memo,\n      $props,\n      $values,\n    }\n  )\n}\n\nconst getBaseReactions =\n  (schema: ISchema, options: ISchemaTransformerOptions) => (field: Field) => {\n    setSchemaFieldState(\n      {\n        field,\n        request: { schema },\n        scope: getBaseScope(field, options),\n      },\n      true\n    )\n  }\n\nconst getUserReactions = (\n  schema: ISchema,\n  options: ISchemaTransformerOptions\n) => {\n  const reactions: SchemaReaction[] = toArr(schema['x-reactions'])\n  return reactions.map((unCompiled) => {\n    return (field: Field) => {\n      const baseScope = getBaseScope(field, options)\n      const reaction = shallowCompile(unCompiled, baseScope)\n      if (!reaction) return\n      if (isFn(reaction)) {\n        return reaction(field, baseScope)\n      }\n      const { when, fulfill, otherwise, target, effects } = reaction\n      const run = () => {\n        const $deps = getDependencies(field, reaction.dependencies)\n        const $dependencies = $deps\n        const scope = lazyMerge(baseScope, {\n          $target: null,\n          $deps,\n          $dependencies,\n        })\n        const compiledWhen = shallowCompile(when, scope)\n        const condition = when ? compiledWhen : true\n        const request = condition ? fulfill : otherwise\n        const runner = request?.run\n        setSchemaFieldState({\n          field,\n          target,\n          request,\n          runner,\n          scope,\n        })\n      }\n\n      if (target) {\n        reaction.effects = effects?.length ? effects : DefaultFieldEffects\n      }\n      if (reaction.effects) {\n        autorun.memo(() => {\n          untracked(() => {\n            each(reaction.effects, (type) => {\n              if (FieldEffects[type]) {\n                FieldEffects[type](field.address, run)\n              }\n            })\n          })\n        }, [])\n      } else {\n        run()\n      }\n    }\n  })\n}\n\nexport const transformFieldProps = (\n  schema: Schema,\n  options: ISchemaTransformerOptions\n): IFieldFactoryProps<any, any> => {\n  return {\n    name: schema.name,\n    reactions: [getBaseReactions(schema, options)].concat(\n      getUserReactions(schema, options)\n    ),\n  }\n}\n", "import { isFn, isArr } from '@formily/shared'\nimport { SchemaPatch } from './types'\n\nconst patches: SchemaPatch[] = []\n\nconst polyfills: Record<string, SchemaPatch[]> = {}\n\nexport const reducePatches = (schema: any) => {\n  return patches.reduce(\n    (buf, patch) => {\n      return patch(buf)\n    },\n    { ...schema }\n  )\n}\n\nexport const registerPatches = (...args: SchemaPatch[]) => {\n  args.forEach((patch) => {\n    if (isFn(patch)) {\n      patches.push(patch)\n    }\n  })\n}\n\nexport const registerPolyfills = (version: string, patch: SchemaPatch) => {\n  if (version && isFn(patch)) {\n    polyfills[version] = polyfills[version] || []\n    polyfills[version].push(patch)\n  }\n}\n\nexport const enablePolyfills = (versions?: string[]) => {\n  if (isArr(versions)) {\n    versions.forEach((version) => {\n      if (isArr(polyfills[version])) {\n        polyfills[version].forEach((patch) => {\n          registerPatches(patch)\n        })\n      }\n    })\n  }\n}\n", "import { registerPolyfills } from '../patches'\nimport { toArr, isArr, isStr, lowerCase, isValid } from '@formily/shared'\nimport { ISchema } from '../types'\n\nconst VOID_COMPONENTS = [\n  'card',\n  'block',\n  'grid-col',\n  'grid-row',\n  'grid',\n  'layout',\n  'step',\n  'tab',\n  'text-box',\n]\n\nconst TYPE_DEFAULT_COMPONENTS = {}\n\nconst transformCondition = (condition: string) => {\n  if (isStr(condition)) {\n    return condition.replace(/\\$value/, '$self.value')\n  }\n}\n\nconst transformXLinkage = (linkages: any[]) => {\n  if (isArr(linkages)) {\n    return linkages.reduce((buf, item) => {\n      if (!item) return buf\n      if (item.type === 'value:visible') {\n        return buf.concat({\n          target: item.target,\n          when: transformCondition(item.condition),\n          fulfill: {\n            state: {\n              visible: true,\n            },\n          },\n          otherwise: {\n            state: {\n              visible: false,\n            },\n          },\n        })\n      } else if (item.type === 'value:schema') {\n        return buf.concat({\n          target: item.target,\n          when: transformCondition(item.condition),\n          fulfill: {\n            schema: SpecificationV1Polyfill({ version: '1.0', ...item.schema }),\n          },\n          otherwise: {\n            schema: SpecificationV1Polyfill({\n              version: '1.0',\n              ...item.otherwise,\n            }),\n          },\n        })\n      } else if (item.type === 'value:state') {\n        return buf.concat({\n          target: item.target,\n          when: transformCondition(item.condition),\n          fulfill: {\n            state: item.state,\n          },\n          otherwise: {\n            state: item.otherwise,\n          },\n        })\n      }\n    }, [])\n  }\n  return []\n}\n\nconst SpecificationV1Polyfill = (schema: ISchema) => {\n  if (isValid(schema['editable'])) {\n    schema['x-editable'] = schema['x-editable'] || schema['editable']\n    delete schema['editable']\n  }\n  if (isValid(schema['visible'])) {\n    schema['x-visible'] = schema['x-visible'] || schema['visible']\n    delete schema['visible']\n  }\n  if (isValid(schema['display'])) {\n    schema['x-display'] =\n      schema['x-display'] || (schema['display'] ? 'visible' : 'hidden')\n    delete schema['display']\n  }\n  if (isValid(schema['x-props'])) {\n    schema['x-decorator-props'] =\n      schema['x-decorator-props'] || schema['x-props']\n    delete schema['display']\n  }\n  if (schema['x-linkages']) {\n    schema['x-reactions'] = toArr(schema['x-reactions']).concat(\n      transformXLinkage(schema['x-linkages'])\n    )\n    delete schema['x-linkages']\n  }\n  if (schema['x-component']) {\n    if (\n      VOID_COMPONENTS.some(\n        (component) => lowerCase(component) === lowerCase(schema['x-component'])\n      )\n    ) {\n      schema['type'] = 'void'\n    }\n  } else {\n    if (TYPE_DEFAULT_COMPONENTS[schema['type']]) {\n      schema['x-component'] = TYPE_DEFAULT_COMPONENTS[schema['type']]\n    }\n  }\n  if (\n    !schema['x-decorator'] &&\n    schema['type'] !== 'void' &&\n    schema['type'] !== 'object'\n  ) {\n    schema['x-decorator'] = schema['x-decorator'] || 'FormItem'\n  }\n  if (schema['x-rules']) {\n    schema['x-validator'] = []\n      .concat(schema['x-validator'] || [])\n      .concat(schema['x-rules'])\n  }\n  return schema\n}\n\nregisterPolyfills('1.0', SpecificationV1Polyfill)\n\nexport const registerVoidComponents = (components: string[]) => {\n  VOID_COMPONENTS.push(...components)\n}\n\nexport const registerTypeDefaultComponents = (maps: Record<string, string>) => {\n  Object.assign(TYPE_DEFAULT_COMPONENTS, maps)\n}\n", "import {\n  ISchema,\n  SchemaEnum,\n  SchemaProperties,\n  SchemaReaction,\n  SchemaTypes,\n  SchemaKey,\n  ISchemaTransformerOptions,\n  Slot,\n} from './types'\nimport { IFieldFactoryProps } from '@formily/core'\nimport { map, each, isFn, instOf, FormPath, isStr } from '@formily/shared'\nimport { compile, silent, shallowCompile, registerCompiler } from './compiler'\nimport { transformFieldProps } from './transformer'\nimport {\n  reducePatches,\n  registerPatches,\n  registerPolyfills,\n  enablePolyfills,\n} from './patches'\nimport {\n  registerVoidComponents,\n  registerTypeDefaultComponents,\n} from './polyfills'\nimport { SchemaNestedMap } from './shared'\n\nexport class Schema<\n  Decorator = any,\n  Component = any,\n  DecoratorProps = any,\n  ComponentProps = any,\n  Pattern = any,\n  Display = any,\n  Validator = any,\n  Message = any,\n  ReactionField = any\n> implements ISchema\n{\n  parent?: Schema\n  root?: Schema\n  name?: SchemaKey\n  title?: Message\n  description?: Message\n  default?: any\n  readOnly?: boolean\n  writeOnly?: boolean\n  type?: SchemaTypes\n  enum?: SchemaEnum<Message>\n  const?: any\n  multipleOf?: number\n  maximum?: number\n  exclusiveMaximum?: number\n  minimum?: number\n  exclusiveMinimum?: number\n  maxLength?: number\n  minLength?: number\n  pattern?: string | RegExp\n  maxItems?: number\n  minItems?: number\n  uniqueItems?: boolean\n  maxProperties?: number\n  minProperties?: number\n  required?: string[] | boolean | string\n  format?: string\n  /** nested json schema spec **/\n  definitions?: Record<\n    string,\n    Schema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  >\n  properties?: Record<\n    string,\n    Schema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  >\n  items?:\n    | Schema<\n        Decorator,\n        Component,\n        DecoratorProps,\n        ComponentProps,\n        Pattern,\n        Display,\n        Validator,\n        Message\n      >\n    | Schema<\n        Decorator,\n        Component,\n        DecoratorProps,\n        ComponentProps,\n        Pattern,\n        Display,\n        Validator,\n        Message\n      >[]\n  additionalItems?: Schema<\n    Decorator,\n    Component,\n    DecoratorProps,\n    ComponentProps,\n    Pattern,\n    Display,\n    Validator,\n    Message\n  >\n  patternProperties?: Record<\n    string,\n    Schema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  >\n  additionalProperties?: Schema<\n    Decorator,\n    Component,\n    DecoratorProps,\n    ComponentProps,\n    Pattern,\n    Display,\n    Validator,\n    Message\n  >;\n\n  //顺序描述\n  ['x-index']?: number;\n  //交互模式\n  ['x-pattern']?: Pattern;\n  //展示状态\n  ['x-display']?: Display;\n  //校验器\n  ['x-validator']?: Validator;\n  //装饰器\n  ['x-decorator']?: Decorator;\n  //装饰器属性\n  ['x-decorator-props']?: DecoratorProps;\n  //组件\n  ['x-component']?: Component;\n  //组件属性\n  ['x-component-props']?: ComponentProps;\n\n  ['x-reactions']?: SchemaReaction<ReactionField>[];\n\n  ['x-content']?: any;\n\n  ['x-data']?: any;\n\n  ['x-visible']?: boolean;\n\n  ['x-hidden']?: boolean;\n\n  ['x-disabled']?: boolean;\n\n  ['x-editable']?: boolean;\n\n  ['x-read-only']?: boolean;\n\n  ['x-read-pretty']?: boolean;\n\n  ['x-compile-omitted']?: string[];\n\n  ['x-slot-node']?: Slot;\n\n  [key: `x-${string | number}` | symbol]: any\n\n  _isJSONSchemaObject = true\n\n  version = '2.0'\n\n  constructor(\n    json: ISchema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >,\n    parent?: Schema\n  ) {\n    if (parent) {\n      this.parent = parent\n      this.root = parent.root\n    } else {\n      this.root = this\n    }\n    return this.fromJSON(json)\n  }\n\n  addProperty = (\n    key: SchemaKey,\n    schema: ISchema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    this.properties = this.properties || {}\n    this.properties[key] = new Schema(schema, this)\n    this.properties[key].name = key\n    return this.properties[key]\n  }\n\n  removeProperty = (key: SchemaKey) => {\n    const schema = this.properties[key]\n    delete this.properties[key]\n    return schema\n  }\n\n  setProperties = (\n    properties: SchemaProperties<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    for (const key in properties) {\n      this.addProperty(key, properties[key])\n    }\n    return this\n  }\n\n  addPatternProperty = (\n    key: SchemaKey,\n    schema: ISchema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    if (!schema) return\n    this.patternProperties = this.patternProperties || {}\n    this.patternProperties[key] = new Schema(schema, this)\n    this.patternProperties[key].name = key\n    return this.patternProperties[key]\n  }\n\n  removePatternProperty = (key: SchemaKey) => {\n    const schema = this.patternProperties[key]\n    delete this.patternProperties[key]\n    return schema\n  }\n\n  setPatternProperties = (\n    properties: SchemaProperties<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    if (!properties) return this\n    for (const key in properties) {\n      this.addPatternProperty(key, properties[key])\n    }\n    return this\n  }\n\n  setAdditionalProperties = (\n    properties: ISchema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    if (!properties) return\n    this.additionalProperties = new Schema(properties)\n    return this.additionalProperties\n  }\n\n  setItems = (\n    schema:\n      | ISchema<\n          Decorator,\n          Component,\n          DecoratorProps,\n          ComponentProps,\n          Pattern,\n          Display,\n          Validator,\n          Message\n        >\n      | ISchema<\n          Decorator,\n          Component,\n          DecoratorProps,\n          ComponentProps,\n          Pattern,\n          Display,\n          Validator,\n          Message\n        >[]\n  ) => {\n    if (!schema) return\n    if (Array.isArray(schema)) {\n      this.items = schema.map((item) => new Schema(item, this))\n    } else {\n      this.items = new Schema(schema, this)\n    }\n    return this.items\n  }\n\n  setAdditionalItems = (\n    items: ISchema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    if (!items) return\n    this.additionalItems = new Schema(items, this)\n    return this.additionalItems\n  }\n\n  findDefinitions = (ref: string) => {\n    if (!ref || !this.root || !isStr(ref)) return\n    if (ref.indexOf('#/') !== 0) return\n    return FormPath.getIn(this.root, ref.substring(2).split('/'))\n  }\n\n  mapProperties = <T>(\n    callback?: (\n      schema: Schema<\n        Decorator,\n        Component,\n        DecoratorProps,\n        ComponentProps,\n        Pattern,\n        Display,\n        Validator,\n        Message\n      >,\n      key: SchemaKey,\n      index: number\n    ) => T\n  ): T[] => {\n    return Schema.getOrderProperties(this).map(({ schema, key }, index) => {\n      return callback(schema, key, index)\n    })\n  }\n\n  mapPatternProperties = <T>(\n    callback?: (\n      schema: Schema<\n        Decorator,\n        Component,\n        DecoratorProps,\n        ComponentProps,\n        Pattern,\n        Display,\n        Validator,\n        Message\n      >,\n      key: SchemaKey,\n      index: number\n    ) => T\n  ): T[] => {\n    return Schema.getOrderProperties(this, 'patternProperties').map(\n      ({ schema, key }, index) => {\n        return callback(schema, key, index)\n      }\n    )\n  }\n\n  reduceProperties = <P, R>(\n    callback?: (\n      buffer: P,\n      schema: Schema<\n        Decorator,\n        Component,\n        DecoratorProps,\n        ComponentProps,\n        Pattern,\n        Display,\n        Validator,\n        Message\n      >,\n      key: SchemaKey,\n      index: number\n    ) => R,\n    predicate?: P\n  ): R => {\n    let results: any = predicate\n    Schema.getOrderProperties(this, 'properties').forEach(\n      ({ schema, key }, index) => {\n        results = callback(results, schema, key, index)\n      }\n    )\n    return results\n  }\n\n  reducePatternProperties = <P, R>(\n    callback?: (\n      buffer: P,\n      schema: Schema<\n        Decorator,\n        Component,\n        DecoratorProps,\n        ComponentProps,\n        Pattern,\n        Display,\n        Validator,\n        Message\n      >,\n      key: SchemaKey,\n      index: number\n    ) => R,\n    predicate?: P\n  ): R => {\n    let results: any = predicate\n    Schema.getOrderProperties(this, 'patternProperties').forEach(\n      ({ schema, key }, index) => {\n        results = callback(results, schema, key, index)\n      }\n    )\n    return results\n  }\n\n  compile = (scope?: any) => {\n    const schema = new Schema({}, this.parent)\n    each(this, (value, key) => {\n      if (isFn(value) && !key.includes('x-')) return\n      if (key === 'parent' || key === 'root') return\n      if (!SchemaNestedMap[key]) {\n        schema[key] = value ? compile(value, scope) : value\n      } else {\n        schema[key] = value ? shallowCompile(value, scope) : value\n      }\n    })\n    return schema\n  }\n\n  fromJSON = (\n    json: ISchema<\n      Decorator,\n      Component,\n      DecoratorProps,\n      ComponentProps,\n      Pattern,\n      Display,\n      Validator,\n      Message\n    >\n  ) => {\n    if (!json) return this\n    if (Schema.isSchemaInstance(json)) return json\n    each(reducePatches(json), (value, key) => {\n      if (isFn(value) && !key.includes('x-')) return\n      if (key === 'properties') {\n        this.setProperties(value)\n      } else if (key === 'patternProperties') {\n        this.setPatternProperties(value)\n      } else if (key === 'additionalProperties') {\n        this.setAdditionalProperties(value)\n      } else if (key === 'items') {\n        this.setItems(value)\n      } else if (key === 'additionalItems') {\n        this.setAdditionalItems(value)\n      } else if (key === '$ref') {\n        this.fromJSON(this.findDefinitions(value))\n      } else {\n        this[key] = value\n      }\n    })\n    return this\n  }\n\n  toJSON = (\n    recursion = true\n  ): ISchema<\n    Decorator,\n    Component,\n    DecoratorProps,\n    ComponentProps,\n    Pattern,\n    Display,\n    Validator,\n    Message\n  > => {\n    const results = {}\n    each(this, (value: any, key) => {\n      if (\n        (isFn(value) && !key.includes('x-')) ||\n        key === 'parent' ||\n        key === 'root'\n      )\n        return\n      if (key === 'properties' || key === 'patternProperties') {\n        if (!recursion) return\n        results[key] = map(value, (item) => item?.toJSON?.())\n      } else if (key === 'additionalProperties' || key === 'additionalItems') {\n        if (!recursion) return\n        results[key] = value?.toJSON?.()\n      } else if (key === 'items') {\n        if (!recursion) return\n        if (Array.isArray(value)) {\n          results[key] = value.map((item) => item?.toJSON?.())\n        } else {\n          results[key] = value?.toJSON?.()\n        }\n      } else {\n        results[key] = value\n      }\n    })\n    return results\n  }\n\n  toFieldProps = (\n    options?: ISchemaTransformerOptions\n  ): IFieldFactoryProps<any, any> => {\n    return transformFieldProps(this, options)\n  }\n\n  static getOrderProperties = (\n    schema: ISchema = {},\n    propertiesName: keyof ISchema = 'properties'\n  ) => {\n    const orderProperties = []\n    const unorderProperties = []\n    for (const key in schema[propertiesName]) {\n      const item = schema[propertiesName][key]\n      const index = item['x-index']\n      if (!isNaN(index)) {\n        orderProperties[index] = { schema: item, key }\n      } else {\n        unorderProperties.push({ schema: item, key })\n      }\n    }\n    return orderProperties.concat(unorderProperties).filter((item) => !!item)\n  }\n\n  static compile = (expression: any, scope?: any) => {\n    return compile(expression, scope)\n  }\n\n  static shallowCompile = (expression: any, scope?: any) => {\n    return shallowCompile(expression, scope)\n  }\n\n  static isSchemaInstance = (value: any): value is Schema => {\n    return instOf(value, Schema)\n  }\n\n  static registerCompiler = registerCompiler\n\n  static registerPatches = registerPatches\n\n  static registerVoidComponents = registerVoidComponents\n\n  static registerTypeDefaultComponents = registerTypeDefaultComponents\n\n  static registerPolyfills = registerPolyfills\n\n  static enablePolyfills = enablePolyfills\n\n  static silent = silent\n}\n", "import React from 'react'\nimport { useAttach } from '../hooks/useAttach'\nimport { FormContext, ContextCleaner } from '../shared'\nimport { IProviderProps, ReactFC } from '../types'\n\nexport const FormProvider: ReactFC<IProviderProps> = (props) => {\n  const form = useAttach(props.form)\n  return (\n    <ContextCleaner>\n      <FormContext.Provider value={form}>{props.children}</FormContext.Provider>\n    </ContextCleaner>\n  )\n}\n\nFormProvider.displayName = 'FormProvider'\n", "import React, { forwardRef, memo, Fragment } from 'react'\nimport hoistNonReactStatics from 'hoist-non-react-statics'\nimport { useObserver } from './hooks/useObserver'\nimport { IObserverOptions, IObserverProps, ReactFC } from './types'\n\nexport function observer<\n  P,\n  Options extends IObserverOptions = IObserverOptions\n>(\n  component: ReactFC<P>,\n  options?: Options\n): React.MemoExoticComponent<\n  ReactFC<\n    Options extends { forwardRef: true }\n      ? P & {\n          ref?: 'ref' extends keyof P ? P['ref'] : React.RefAttributes<any>\n        }\n      : React.PropsWithoutRef<P>\n  >\n> {\n  const realOptions = {\n    forwardRef: false,\n    ...options,\n  }\n\n  const wrappedComponent = realOptions.forwardRef\n    ? forwardRef((props: any, ref: any) => {\n        return useObserver(() => component({ ...props, ref }), realOptions)\n      })\n    : (props: any) => {\n        return useObserver(() => component(props), realOptions)\n      }\n\n  const memoComponent = memo(wrappedComponent)\n\n  hoistNonReactStatics(memoComponent, component)\n\n  if (realOptions.displayName) {\n    memoComponent.displayName = realOptions.displayName\n  }\n\n  return memoComponent\n}\n\nexport const Observer = observer((props: IObserverProps) => {\n  const children =\n    typeof props.children === 'function' ? props.children() : props.children\n  return React.createElement(Fragment, {}, children)\n})\n", "import { useCallback, useRef, useState } from 'react'\nimport { useLayoutEffect } from './useLayoutEffect'\nimport { useDidUpdate } from './useDidUpdate'\n\nconst EMPTY_ARRAY: any[] = []\nconst RENDER_COUNT = { value: 0 }\nconst RENDER_QUEUE = new Set<() => void>()\n\nexport function useForceUpdate() {\n  const [, setState] = useState([])\n  const firstRenderedRef = useRef(false)\n  const needUpdateRef = useRef(false)\n  useLayoutEffect(() => {\n    firstRenderedRef.current = true\n    if (needUpdateRef.current) {\n      setState([])\n      needUpdateRef.current = false\n    }\n    return () => {\n      firstRenderedRef.current = false\n    }\n  }, EMPTY_ARRAY)\n\n  const update = useCallback(() => {\n    setState([])\n  }, EMPTY_ARRAY)\n\n  const scheduler = useCallback(() => {\n    if (!firstRenderedRef.current) {\n      // 针对StrictMode无法快速回收内存，只能考虑拦截第一次渲染函数的setState，\n      // 因为第一次渲染函数的setState会触发第二次渲染函数执行，从而清理掉第二次渲染函数内部的依赖\n      needUpdateRef.current = true\n      return\n    }\n    if (RENDER_COUNT.value === 0) {\n      update()\n    } else {\n      RENDER_QUEUE.add(update)\n    }\n  }, EMPTY_ARRAY)\n\n  RENDER_COUNT.value++\n\n  useDidUpdate(() => {\n    if (RENDER_COUNT.value > 0) {\n      RENDER_COUNT.value--\n    }\n    if (RENDER_COUNT.value === 0) {\n      RENDER_QUEUE.forEach((update) => {\n        RENDER_QUEUE.delete(update)\n        update()\n      })\n    }\n  })\n\n  return scheduler\n}\n", "import { useEffect, useLayoutEffect as _useLayoutEffect } from 'react'\n\nexport const useLayoutEffect =\n  typeof document !== 'undefined' ? _useLayoutEffect : useEffect\n", "import { useRef } from 'react'\nimport { useLayoutEffect } from './useLayoutEffect'\nimport { immediate } from '../shared'\n\nexport const useDidUpdate = (callback?: () => void) => {\n  const request = useRef(null)\n  request.current = immediate(callback)\n  useLayoutEffect(() => {\n    request.current()\n    callback()\n  })\n}\n", "/* istanbul ignore next */\nfunction globalSelf() {\n  try {\n    if (typeof self !== 'undefined') {\n      return self\n    }\n  } catch (e) {}\n  try {\n    if (typeof window !== 'undefined') {\n      return window\n    }\n  } catch (e) {}\n  try {\n    if (typeof global !== 'undefined') {\n      return global\n    }\n  } catch (e) {}\n  return Function('return this')()\n}\n\nexport const globalThisPolyfill: Window = globalSelf()\n", "import { globalThisPolyfill } from './global'\n\nconst registry: FinalizationRegistry<any> =\n  globalThisPolyfill['FinalizationRegistry'] &&\n  new globalThisPolyfill['FinalizationRegistry']((token: any) =>\n    token?.clean?.()\n  )\n\ntype Token = { clean: () => void }\nexport class GarbageCollector<T extends object = any> {\n  private expireTime: number\n  private request?: ReturnType<typeof setTimeout>;\n  private token: Token\n  constructor(clean?: () => void, expireTime = 10_000) {\n    this.token = {\n      clean,\n    }\n    this.expireTime = expireTime\n  }\n\n  open(target: T) {\n    if (registry) {\n      registry.register(target, this.token, this.token)\n    } else {\n      this.request = setTimeout(() => {\n        this.token?.clean?.()\n      }, this.expireTime)\n    }\n  }\n\n  close() {\n    if (registry) {\n      registry.unregister(this.token)\n    } else {\n      clearTimeout(this.request)\n    }\n  }\n}\n", "export const immediate = (callback?: () => void) => {\n  let disposed = false\n  Promise.resolve(0).then(() => {\n    if (disposed) {\n      disposed = false\n      return\n    }\n    callback()\n  })\n  return () => {\n    disposed = true\n  }\n}\n", "import React from 'react'\nimport { GarbageCollector } from '../shared'\nimport { useCompatEffect } from './useCompatEffect'\n\nclass ObjectToBeRetainedByReact {}\n\nfunction objectToBeRetainedByReactFactory() {\n  return new ObjectToBeRetainedByReact()\n}\n\nexport const useCompatFactory = <T extends { dispose: () => void }>(\n  factory: () => T\n): T => {\n  const instRef = React.useRef<T>(null)\n  const gcRef = React.useRef<GarbageCollector>()\n  const [objectRetainedByReact] = React.useState(\n    objectToBeRetainedByReactFactory\n  )\n  if (!instRef.current) {\n    instRef.current = factory()\n  }\n  //StrictMode/ConcurrentMode会导致组件无法正确触发UnMount，所以只能自己做垃圾回收\n  if (!gcRef.current) {\n    gcRef.current = new GarbageCollector(() => {\n      if (instRef.current) {\n        instRef.current.dispose()\n      }\n    })\n    gcRef.current.open(objectRetainedByReact)\n  }\n\n  useCompatEffect(() => {\n    gcRef.current.close()\n    return () => {\n      if (instRef.current) {\n        instRef.current.dispose()\n        instRef.current = null\n      }\n    }\n  }, [])\n  return instRef.current\n}\n", "import { useEffect, useRef, EffectCallback, DependencyList } from 'react'\nimport { immediate } from '../shared'\n\nconst isArr = Array.isArray\n\nconst isEqualDeps = (target: any, source: any) => {\n  const arrA = isArr(target)\n  const arrB = isArr(source)\n  if (arrA !== arrB) return false\n  if (arrA) {\n    if (target.length !== source.length) return false\n    return target.every((val, index) => val === source[index])\n  }\n  return target === source\n}\n\nexport const useCompatEffect = (\n  effect: EffectCallback,\n  deps?: DependencyList\n) => {\n  const depsRef = useRef<DependencyList>(null)\n  const mountedRef = useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    const dispose = effect()\n    return () => {\n      mountedRef.current = false\n      if (!isEqualDeps(depsRef.current, deps)) {\n        if (dispose) dispose()\n        return\n      }\n      immediate(() => {\n        if (mountedRef.current) return\n        if (dispose) dispose()\n      })\n    }\n  }, deps)\n  depsRef.current = deps\n}\n", "import { Tracker } from '@formily/reactive'\nimport { IObserverOptions } from '../types'\nimport { useForceUpdate } from './useForceUpdate'\nimport { useCompatFactory } from './useCompatFactory'\n\nexport const useObserver = <T extends () => any>(\n  view: T,\n  options?: IObserverOptions\n): ReturnType<T> => {\n  const forceUpdate = useForceUpdate()\n  const tracker = useCompatFactory(\n    () =>\n      new Tracker(() => {\n        if (typeof options?.scheduler === 'function') {\n          options.scheduler(forceUpdate)\n        } else {\n          forceUpdate()\n        }\n      }, options?.displayName)\n  )\n  return tracker.track(view)\n}\n", "import { useForceUpdate } from './useForceUpdate'\nimport { useCompatEffect } from './useCompatEffect'\nimport { useCompatFactory } from './useCompatFactory'\nimport { useDidUpdate } from './useDidUpdate'\nimport { useLayoutEffect } from './useLayoutEffect'\nimport { useObserver } from './useObserver'\n\nexport const unstable_useForceUpdate = useForceUpdate\nexport const unstable_useCompatEffect = useCompatEffect\nexport const unstable_useCompatFactory = useCompatFactory\nexport const unstable_useDidUpdate = useDidUpdate\nexport const unstable_useLayoutEffect = useLayoutEffect\nexport const unstable_useObserver = useObserver\n", "import { unstable_useCompatEffect } from '@formily/reactive-react'\ninterface IRecycleTarget {\n  onMount: () => void\n  onUnmount: () => void\n}\n\nexport const useAttach = <T extends IRecycleTarget>(target: T): T => {\n  unstable_useCompatEffect(() => {\n    target.onMount()\n    return () => target.onUnmount()\n  }, [target])\n  return target\n}\n", "import React, { createContext } from 'react'\nimport { Form, GeneralField } from '@formily/core'\nimport { Schema } from '@formily/json-schema'\nimport {\n  ISchemaFieldReactFactoryOptions,\n  SchemaReactComponents,\n} from '../types'\n\nconst createContextCleaner = <T>(...contexts: React.Context<T>[]) => {\n  return ({ children }) => {\n    return contexts.reduce((buf, ctx) => {\n      return React.createElement(ctx.Provider, { value: undefined }, buf)\n    }, children)\n  }\n}\n\nexport const FormContext = createContext<Form>(null)\nexport const FieldContext = createContext<GeneralField>(null)\nexport const SchemaMarkupContext = createContext<Schema>(null)\nexport const SchemaContext = createContext<Schema>(null)\nexport const SchemaExpressionScopeContext = createContext<any>(null)\nexport const SchemaComponentsContext =\n  createContext<SchemaReactComponents>(null)\nexport const SchemaOptionsContext =\n  createContext<ISchemaFieldReactFactoryOptions>(null)\n\nexport const ContextCleaner = createContextCleaner(\n  FieldContext,\n  SchemaMarkupContext,\n  SchemaContext,\n  SchemaExpressionScopeContext,\n  SchemaComponentsContext,\n  SchemaOptionsContext\n)\n", "import React from 'react'\nimport { isFn, isStr, FormPath, each, isValid } from '@formily/shared'\nimport { isVoidField } from '@formily/core'\nimport { observer, Observer } from '@formily/reactive-react'\nimport { JSXComponent, IComponentMapper, IStateMapper } from '../types'\nimport { useField } from '../hooks'\nimport hoistNonReactStatics from 'hoist-non-react-statics'\n\nexport function mapProps<T extends JSXComponent>(\n  ...args: IStateMapper<React.ComponentProps<T>>[]\n) {\n  return (target: T) => {\n    return observer(\n      (props: any) => {\n        const field = useField()\n        const results = args.reduce(\n          (props, mapper) => {\n            if (isFn(mapper)) {\n              props = Object.assign(props, mapper(props, field))\n            } else {\n              each(mapper, (to, extract) => {\n                const extractValue = FormPath.getIn(field, extract)\n                const targetValue = isStr(to) ? to : (extract as any)\n                const originalValue = FormPath.getIn(props, targetValue)\n                if (extract === 'value') {\n                  if (to !== extract) {\n                    delete props.value\n                  }\n                }\n                if (isValid(originalValue) && !isValid(extractValue)) return\n                FormPath.setIn(props, targetValue, extractValue)\n              })\n            }\n            return props\n          },\n          { ...props }\n        )\n        return React.createElement(target, results)\n      },\n      {\n        forwardRef: true,\n      }\n    )\n  }\n}\n\nexport function mapReadPretty<T extends JSXComponent, C extends JSXComponent>(\n  component: C,\n  readPrettyProps?: React.ComponentProps<C>\n) {\n  return (target: T) => {\n    return observer(\n      (props) => {\n        const field = useField()\n        if (!isVoidField(field) && field?.pattern === 'readPretty') {\n          return React.createElement(component, {\n            ...readPrettyProps,\n            ...props,\n          })\n        }\n        return React.createElement(target, props)\n      },\n      {\n        forwardRef: true,\n      }\n    )\n  }\n}\n\nexport function connect<T extends JSXComponent>(\n  target: T,\n  ...args: IComponentMapper<T>[]\n) {\n  const Target = args.reduce((target, mapper) => {\n    return mapper(target)\n  }, target)\n\n  const Destination = React.forwardRef(\n    (props: Partial<React.ComponentProps<T>>, ref) => {\n      return React.createElement(Target, { ...props, ref })\n    }\n  )\n\n  if (target) hoistNonReactStatics(Destination, target as any)\n\n  return Destination\n}\n\nexport { observer, Observer }\n", "import { useContext } from 'react'\nimport { Form } from '@formily/core'\nimport { FormContext } from '../shared'\n\nexport const useForm = <T extends object = any>(): Form<T> => {\n  return useContext(FormContext)\n}\n", "import { useContext } from 'react'\nimport { GeneralField } from '@formily/core'\nimport { FieldContext } from '../shared'\n\nexport const useField = <T = GeneralField>(): T => {\n  return useContext(FieldContext) as any\n}\n", "import { isObjectField, GeneralField, Form, ObjectField } from '@formily/core'\nimport { useField } from './useField'\nimport { useForm } from './useForm'\n\nexport const useParentForm = (): Form | ObjectField => {\n  const field = useField()\n  const form = useForm()\n  const findObjectParent = (field: GeneralField) => {\n    if (!field) return form\n    if (isObjectField(field)) return field\n    return findObjectParent(field?.parent)\n  }\n  return findObjectParent(field)\n}\n", "import { useContext } from 'react'\nimport { SchemaContext } from '../shared'\nimport { Schema } from '@formily/json-schema'\n\nexport const useFieldSchema = (): Schema => {\n  return useContext(SchemaContext)\n}\n", "import { unstable_useCompatFactory } from '@formily/reactive-react'\nimport { Form } from '@formily/core'\nimport { uid } from '@formily/shared'\nimport { useForm } from './useForm'\n\nexport const useFormEffects = (effects?: (form: Form) => void) => {\n  const form = useForm()\n  unstable_useCompatFactory(() => {\n    const id = uid()\n    form.addEffects(id, effects)\n    return {\n      dispose() {\n        form.removeEffects(id)\n      },\n    }\n  })\n}\n", "import { useContext } from 'react'\nimport { SchemaExpressionScopeContext } from '../shared/context'\n\nexport const useExpressionScope = () => useContext(SchemaExpressionScopeContext)\n", "import React, { Fragment } from 'react'\nimport { isFn } from '@formily/shared'\nimport { observer } from '@formily/reactive-react'\nimport { useForm } from '../hooks'\nimport { IFormSpyProps, ReactFC } from '../types'\n\nexport const FormConsumer: ReactFC<IFormSpyProps> = observer((props) => {\n  const children = isFn(props.children) ? props.children(useForm()) : null\n  return <Fragment>{children}</Fragment>\n})\n\nFormConsumer.displayName = 'FormConsumer'\n", "import React from 'react'\nimport { ArrayField as ArrayFieldType } from '@formily/core'\nimport { useForm, useField } from '../hooks'\nimport { useAttach } from '../hooks/useAttach'\nimport { FieldContext } from '../shared'\nimport { JSXComponent, IFieldProps } from '../types'\nimport { ReactiveField } from './ReactiveField'\n\nexport const ArrayField = <D extends JSXComponent, C extends JSXComponent>(\n  props: IFieldProps<D, C, ArrayFieldType>\n) => {\n  const form = useForm()\n  const parent = useField()\n  const field = useAttach(\n    form.createArrayField({\n      basePath: parent?.address,\n      ...props,\n    })\n  )\n  return (\n    <FieldContext.Provider value={field}>\n      <ReactiveField field={field}>{props.children}</ReactiveField>\n    </FieldContext.Provider>\n  )\n}\n\nArrayField.displayName = 'ArrayField'\n", "import React, { Fragment, useContext } from 'react'\nimport { toJS } from '@formily/reactive'\nimport { observer } from '@formily/reactive-react'\nimport { FormPath, isFn } from '@formily/shared'\nimport { isVoidField, GeneralField, Form } from '@formily/core'\nimport { SchemaComponentsContext } from '../shared'\nimport { RenderPropsChildren } from '../types'\ninterface IReactiveFieldProps {\n  field: GeneralField\n  children?: RenderPropsChildren<GeneralField>\n}\n\nconst mergeChildren = (\n  children: RenderPropsChildren<GeneralField>,\n  content: React.ReactNode\n) => {\n  if (!children && !content) return\n  if (isFn(children)) return\n  return (\n    <Fragment>\n      {children}\n      {content}\n    </Fragment>\n  )\n}\n\nconst isValidComponent = (target: any) =>\n  target && (typeof target === 'object' || typeof target === 'function')\n\nconst renderChildren = (\n  children: RenderPropsChildren<GeneralField>,\n  field?: GeneralField,\n  form?: Form\n) => (isFn(children) ? children(field, form) : children)\n\nconst ReactiveInternal: React.FC<IReactiveFieldProps> = (props) => {\n  const components = useContext(SchemaComponentsContext)\n  if (!props.field) {\n    return <Fragment>{renderChildren(props.children)}</Fragment>\n  }\n  const field = props.field\n  const content = mergeChildren(\n    renderChildren(props.children, field, field.form),\n    field.content ?? field.componentProps.children\n  )\n  if (field.display !== 'visible') return null\n\n  const getComponent = (target: any) => {\n    return isValidComponent(target)\n      ? target\n      : FormPath.getIn(components, target) ?? target\n  }\n\n  const renderDecorator = (children: React.ReactNode) => {\n    if (!field.decoratorType) {\n      return <Fragment>{children}</Fragment>\n    }\n\n    return React.createElement(\n      getComponent(field.decoratorType),\n      toJS(field.decoratorProps),\n      children\n    )\n  }\n\n  const renderComponent = () => {\n    if (!field.componentType) return content\n    const value = !isVoidField(field) ? field.value : undefined\n    const onChange = !isVoidField(field)\n      ? (...args: any[]) => {\n          field.onInput(...args)\n          field.componentProps?.onChange?.(...args)\n        }\n      : field.componentProps?.onChange\n    const onFocus = !isVoidField(field)\n      ? (...args: any[]) => {\n          field.onFocus(...args)\n          field.componentProps?.onFocus?.(...args)\n        }\n      : field.componentProps?.onFocus\n    const onBlur = !isVoidField(field)\n      ? (...args: any[]) => {\n          field.onBlur(...args)\n          field.componentProps?.onBlur?.(...args)\n        }\n      : field.componentProps?.onBlur\n    const disabled = !isVoidField(field)\n      ? field.pattern === 'disabled' || field.pattern === 'readPretty'\n      : undefined\n    const readOnly = !isVoidField(field)\n      ? field.pattern === 'readOnly'\n      : undefined\n    return React.createElement(\n      getComponent(field.componentType),\n      {\n        disabled,\n        readOnly,\n        ...toJS(field.componentProps),\n        value,\n        onChange,\n        onFocus,\n        onBlur,\n      },\n      content\n    )\n  }\n\n  return renderDecorator(renderComponent())\n}\n\nReactiveInternal.displayName = 'ReactiveField'\n\nexport const ReactiveField = observer(ReactiveInternal, {\n  forwardRef: true,\n})\n", "import React from 'react'\nimport { ObjectField as ObjectFieldType } from '@formily/core'\nimport { useForm, useField } from '../hooks'\nimport { useAttach } from '../hooks/useAttach'\nimport { ReactiveField } from './ReactiveField'\nimport { FieldContext } from '../shared'\nimport { JSXComponent, IFieldProps } from '../types'\n\nexport const ObjectField = <D extends JSXComponent, C extends JSXComponent>(\n  props: IFieldProps<D, C, ObjectFieldType>\n) => {\n  const form = useForm()\n  const parent = useField()\n  const field = useAttach(\n    form.createObjectField({ basePath: parent?.address, ...props })\n  )\n  return (\n    <FieldContext.Provider value={field}>\n      <ReactiveField field={field}>{props.children}</ReactiveField>\n    </FieldContext.Provider>\n  )\n}\n\nObjectField.displayName = 'ObjectField'\n", "import React from 'react'\nimport { useForm, useField } from '../hooks'\nimport { useAttach } from '../hooks/useAttach'\nimport { ReactiveField } from './ReactiveField'\nimport { FieldContext } from '../shared'\nimport { JSXComponent, IVoidFieldProps } from '../types'\n\nexport const VoidField = <D extends JSXComponent, C extends JSXComponent>(\n  props: IVoidFieldProps<D, C>\n) => {\n  const form = useForm()\n  const parent = useField()\n  const field = useAttach(\n    form.createVoidField({ basePath: parent?.address, ...props })\n  )\n  return (\n    <FieldContext.Provider value={field}>\n      <ReactiveField field={field}>{props.children}</ReactiveField>\n    </FieldContext.Provider>\n  )\n}\n\nVoidField.displayName = 'VoidField'\n", "import React, { Fragment, useMemo } from 'react'\nimport { FormPath, isBool, isFn, isValid } from '@formily/shared'\nimport { GeneralField } from '@formily/core'\nimport { Schema } from '@formily/json-schema'\nimport { SchemaContext } from '../shared'\nimport { IRecursionFieldProps, ReactFC } from '../types'\nimport { useField, useExpressionScope } from '../hooks'\nimport { ObjectField } from './ObjectField'\nimport { ArrayField } from './ArrayField'\nimport { Field } from './Field'\nimport { VoidField } from './VoidField'\nimport { ExpressionScope } from './ExpressionScope'\nimport { observable } from '@formily/reactive'\n\nconst useFieldProps = (schema: Schema) => {\n  const scope = useExpressionScope()\n  return schema.toFieldProps({\n    scope,\n  }) as any\n}\n\nconst useBasePath = (props: IRecursionFieldProps) => {\n  const parent = useField()\n  if (props.onlyRenderProperties) {\n    return props.basePath || parent?.address.concat(props.name)\n  }\n  return props.basePath || parent?.address\n}\n\nexport const RecursionField: ReactFC<IRecursionFieldProps> = (props) => {\n  const basePath = useBasePath(props)\n  const fieldSchema = useMemo(() => new Schema(props.schema), [props.schema])\n  const fieldProps = useFieldProps(fieldSchema)\n\n  const renderSlots = (innerSchema, key) => {\n    const slot = innerSchema['x-slot-node']\n    const { target, isRenderProp } = slot\n    if (isRenderProp) {\n      const args = observable({ $slotArgs: [] })\n      FormPath.setIn(fieldSchema.properties, target, (..._args: any) => {\n        args.$slotArgs = _args\n        return (\n          <ExpressionScope value={args}>\n            <RecursionField schema={innerSchema} name={key} />\n          </ExpressionScope>\n        )\n      })\n    } else {\n      FormPath.setIn(\n        fieldSchema.properties,\n        target,\n        <RecursionField schema={innerSchema} name={key} />\n      )\n    }\n  }\n\n  const renderProperties = (field?: GeneralField) => {\n    if (props.onlyRenderSelf) return\n    const properties = Schema.getOrderProperties(fieldSchema)\n    if (!properties.length) return\n    return (\n      <Fragment>\n        {properties.map(({ schema: item, key: name }, index) => {\n          const base = field?.address || basePath\n          let schema: Schema = item\n          if (schema['x-slot-node']) {\n            renderSlots(schema, name)\n            return null\n          }\n\n          if (isFn(props.mapProperties)) {\n            const mapped = props.mapProperties(item, name)\n            if (mapped) {\n              schema = mapped\n            }\n          }\n          if (isFn(props.filterProperties)) {\n            if (props.filterProperties(schema, name) === false) {\n              return null\n            }\n          }\n          if (isBool(props.propsRecursion) && props.propsRecursion) {\n            return (\n              <RecursionField\n                propsRecursion={true}\n                filterProperties={props.filterProperties}\n                mapProperties={props.mapProperties}\n                schema={schema}\n                key={`${index}-${name}`}\n                name={name}\n                basePath={base}\n              />\n            )\n          }\n          return (\n            <RecursionField\n              schema={schema}\n              key={`${index}-${name}`}\n              name={name}\n              basePath={base}\n            />\n          )\n        })}\n      </Fragment>\n    )\n  }\n\n  const render = () => {\n    if (!isValid(props.name)) return renderProperties()\n    if (fieldSchema.type === 'object') {\n      if (props.onlyRenderProperties) return renderProperties()\n      return (\n        <ObjectField {...fieldProps} name={props.name} basePath={basePath}>\n          {renderProperties}\n        </ObjectField>\n      )\n    } else if (fieldSchema.type === 'array') {\n      return (\n        <ArrayField {...fieldProps} name={props.name} basePath={basePath} />\n      )\n    } else if (fieldSchema.type === 'void') {\n      if (props.onlyRenderProperties) return renderProperties()\n      return (\n        <VoidField {...fieldProps} name={props.name} basePath={basePath}>\n          {renderProperties}\n        </VoidField>\n      )\n    }\n    return <Field {...fieldProps} name={props.name} basePath={basePath} />\n  }\n\n  if (!fieldSchema) return <Fragment />\n\n  return (\n    <SchemaContext.Provider value={fieldSchema}>\n      {render()}\n    </SchemaContext.Provider>\n  )\n}\n", "import React, { useEffect } from 'react'\nimport { useField, useForm } from '../hooks'\nimport { ReactiveField } from './ReactiveField'\nimport { FieldContext } from '../shared'\nimport { JSXComponent, IFieldProps } from '../types'\n\nexport const Field = <D extends JSXComponent, C extends JSXComponent>(\n  props: IFieldProps<D, C>\n) => {\n  const form = useForm()\n  const parent = useField()\n  const field = form.createField({ basePath: parent?.address, ...props })\n  useEffect(() => {\n    field?.onMount()\n    return () => {\n      field?.onUnmount()\n    }\n  }, [field])\n  return (\n    <FieldContext.Provider value={field}>\n      <ReactiveField field={field}>{props.children}</ReactiveField>\n    </FieldContext.Provider>\n  )\n}\n\nField.displayName = 'Field'\n", "import React, { useContext } from 'react'\nimport { lazyMerge } from '@formily/shared'\nimport { SchemaExpressionScopeContext } from '../shared'\nimport { IExpressionScopeProps, ReactFC } from '../types'\n\nexport const ExpressionScope: ReactFC<IExpressionScopeProps> = (props) => {\n  const scope = useContext(SchemaExpressionScopeContext)\n  return (\n    <SchemaExpressionScopeContext.Provider\n      value={lazyMerge(scope, props.value)}\n    >\n      {props.children}\n    </SchemaExpressionScopeContext.Provider>\n  )\n}\n", "import React from 'react'\nimport { ExpressionScope } from './ExpressionScope'\nimport { ReactFC, IRecordsScopeProps } from '../types'\n\nexport const RecordsScope: ReactFC<IRecordsScopeProps> = (props) => {\n  return (\n    <ExpressionScope\n      value={{\n        get $records() {\n          return props.getRecords?.() ?? []\n        },\n      }}\n    >\n      {props.children}\n    </ExpressionScope>\n  )\n}\n", "import React from 'react'\nimport { lazyMerge } from '@formily/shared'\nimport { ExpressionScope } from './ExpressionScope'\nimport { ReactFC, IRecordScopeProps } from '../types'\nimport { useExpressionScope } from '../hooks'\n\nexport const RecordScope: ReactFC<IRecordScopeProps> = (props) => {\n  const scope = useExpressionScope()\n  return (\n    <ExpressionScope\n      value={{\n        get $lookup() {\n          return scope?.$record\n        },\n        get $record() {\n          const record = props.getRecord?.()\n          if (typeof record === 'object') {\n            return lazyMerge(record, {\n              get $lookup() {\n                return scope?.$record\n              },\n              get $index() {\n                return props.getIndex?.()\n              },\n            })\n          }\n          return record\n        },\n        get $index() {\n          return props.getIndex?.()\n        },\n      }}\n    >\n      {props.children}\n    </ExpressionScope>\n  )\n}\n", "import React, { useContext, Fragment } from 'react'\nimport { ISchema, Schema } from '@formily/json-schema'\nimport { RecursionField } from './RecursionField'\nimport { render } from '../shared/render'\nimport {\n  SchemaMarkupContext,\n  SchemaOptionsContext,\n  SchemaComponentsContext,\n} from '../shared'\nimport {\n  ReactComponentPath,\n  JSXComponent,\n  ISchemaFieldReactFactoryOptions,\n  SchemaReactComponents,\n  ISchemaFieldProps,\n  ISchemaMarkupFieldProps,\n  ISchemaTypeFieldProps,\n} from '../types'\nimport { lazyMerge } from '@formily/shared'\nimport { ExpressionScope } from './ExpressionScope'\nconst env = {\n  nonameId: 0,\n}\n\nconst getRandomName = () => {\n  return `NO_NAME_FIELD_$${env.nonameId++}`\n}\n\nexport function createSchemaField<Components extends SchemaReactComponents>(\n  options: ISchemaFieldReactFactoryOptions<Components> = {}\n) {\n  function SchemaField<\n    Decorator extends JSXComponent,\n    Component extends JSXComponent\n  >(props: ISchemaFieldProps<Decorator, Component>) {\n    const schema = Schema.isSchemaInstance(props.schema)\n      ? props.schema\n      : new Schema({\n          type: 'object',\n          ...props.schema,\n        })\n    const renderMarkup = () => {\n      env.nonameId = 0\n      if (props.schema) return null\n      return render(\n        <SchemaMarkupContext.Provider value={schema}>\n          {props.children}\n        </SchemaMarkupContext.Provider>\n      )\n    }\n\n    const renderChildren = () => {\n      return <RecursionField {...props} schema={schema} />\n    }\n\n    return (\n      <SchemaOptionsContext.Provider value={options}>\n        <SchemaComponentsContext.Provider\n          value={lazyMerge(options.components, props.components)}\n        >\n          <ExpressionScope value={lazyMerge(options.scope, props.scope)}>\n            {renderMarkup()}\n            {renderChildren()}\n          </ExpressionScope>\n        </SchemaComponentsContext.Provider>\n      </SchemaOptionsContext.Provider>\n    )\n  }\n\n  SchemaField.displayName = 'SchemaField'\n\n  function MarkupRender(props: any) {\n    const parent = useContext(SchemaMarkupContext)\n    if (!parent) return <Fragment />\n    const renderChildren = () => {\n      return <React.Fragment>{props.children}</React.Fragment>\n    }\n    const appendArraySchema = (schema: ISchema) => {\n      const items = parent.items as Schema\n      if (items && items.name !== props.name) {\n        return parent.addProperty(props.name, schema)\n      } else {\n        return parent.setItems(schema)\n      }\n    }\n    if (parent.type === 'object' || parent.type === 'void') {\n      const schema = parent.addProperty(props.name, props)\n      return (\n        <SchemaMarkupContext.Provider value={schema}>\n          {renderChildren()}\n        </SchemaMarkupContext.Provider>\n      )\n    } else if (parent.type === 'array') {\n      const schema = appendArraySchema(props)\n      return (\n        <SchemaMarkupContext.Provider\n          value={Array.isArray(schema) ? schema[0] : schema}\n        >\n          {props.children}\n        </SchemaMarkupContext.Provider>\n      )\n    } else {\n      return renderChildren()\n    }\n  }\n\n  function MarkupField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaMarkupFieldProps<Components, Component, Decorator>) {\n    return <MarkupRender {...props} name={props.name || getRandomName()} />\n  }\n\n  MarkupField.displayName = 'MarkupField'\n\n  function StringField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"string\" />\n  }\n\n  StringField.displayName = 'StringField'\n\n  function ObjectField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"object\" />\n  }\n\n  ObjectField.displayName = 'ObjectField'\n\n  function ArrayField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"array\" />\n  }\n\n  ArrayField.displayName = 'ArrayField'\n  function BooleanField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"boolean\" />\n  }\n\n  BooleanField.displayName = 'BooleanField'\n\n  function NumberField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"number\" />\n  }\n\n  NumberField.displayName = 'NumberField'\n\n  function DateField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"date\" />\n  }\n\n  DateField.displayName = 'DateField'\n\n  function DateTimeField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"datetime\" />\n  }\n\n  DateTimeField.displayName = 'DateTimeField'\n\n  function VoidField<\n    Decorator extends ReactComponentPath<Components>,\n    Component extends ReactComponentPath<Components>\n  >(props: ISchemaTypeFieldProps<Components, Component, Decorator>) {\n    return <MarkupField {...props} type=\"void\" />\n  }\n\n  VoidField.displayName = 'VoidField'\n\n  SchemaField.Markup = MarkupField\n  SchemaField.String = StringField\n  SchemaField.Object = ObjectField\n  SchemaField.Array = ArrayField\n  SchemaField.Boolean = BooleanField\n  SchemaField.Date = DateField\n  SchemaField.DateTime = DateTimeField\n  SchemaField.Void = VoidField\n  SchemaField.Number = NumberField\n\n  return SchemaField\n}\n", "import React, { ReactNode, ReactPortal } from 'react'\nimport { globalThisPolyfill } from '@formily/shared'\n\ninterface Env {\n  portalDOM?: HTMLDivElement\n  createPortal?: (children: ReactNode, container: Element) => ReactPortal\n}\n\nconst env: Env = {\n  portalDOM: globalThisPolyfill?.document?.createElement?.('div'),\n  createPortal: globalThisPolyfill?.['ReactDOM']?.createPortal,\n}\n\n/* istanbul ignore next */\nconst loadCreatePortal = () => {\n  if (!env.createPortal) {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      env.createPortal ??= require('react-dom')?.createPortal\n    } catch {}\n  }\n  if (!env.createPortal) {\n    try {\n      // @ts-ignore\n      import('react-dom')\n        .then((module) => (env.createPortal ??= module?.createPortal))\n        .catch()\n    } catch {}\n  }\n}\n\nexport const render = (element: React.ReactElement) => {\n  if (globalThisPolyfill.navigator?.product === 'ReactNative') return null\n  if (env.portalDOM && env.createPortal) {\n    return env.createPortal(element, env.portalDOM)\n  } else {\n    return React.createElement('template', {}, element)\n  }\n}\n\nloadCreatePortal()\n"],
  "mappings": "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",
  "names": ["Fragment", "hoistNonReactStatics", "traverse", "target", "_a", "_a", "compile", "source", "_a", "_b", "__assign", "__read", "Schema", "_a", "json", "_b", "item", "import_react", "import_react", "import_react", "_useLayoutEffect", "import_react", "globalThisPolyfill", "globalThisPolyfill", "_a", "GarbageCollector", "_b", "_a", "__read", "update", "import_react", "import_react", "isArr", "ObjectToBeRetainedByReact", "React", "_a", "__read", "__assign", "hoistNonReactStatics", "React", "import_react", "_a", "React", "import_react", "import_react", "import_react", "field", "import_react", "import_react", "import_hoist_non_react_statics", "props", "__assign", "React", "target", "hoistNonReactStatics", "React", "import_react", "React", "import_react", "import_react", "React", "_a", "__spreadArray", "__read", "_b", "_c", "__assign", "__assign", "React", "import_react", "__assign", "React", "import_react", "__assign", "React", "import_react", "import_react", "__assign", "React", "import_react", "React", "React", "_a", "render", "__assign", "import_react", "React", "_b", "_a", "import_react", "React", "_a", "import_react", "import_react", "_a", "_b", "_c", "React", "env", "__assign", "React", "renderChildren", "schema", "ObjectField", "ArrayField", "VoidField"]
}
